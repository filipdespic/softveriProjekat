package forme;

import java.io.IOException;
import java.util.HashMap;
import javax.swing.JOptionPane;
import kontroleriKI.OpstiKontrolerKI;

public class EkranskaFormaLogovanje extends OpstaEkranskaForma {

    /**
     * Creates new form EkranskaFormaZaLogovanje
     */
    public EkranskaFormaLogovanje() {
        initComponents();
        postaviImeForme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passLozinka = new javax.swing.JPasswordField();
        btnUlogujSe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Dobrodošli u sistem za evidenciju knjiga i članova biblioteke.");

        jLabel2.setText("Unesite Vaše korisničko ime i lozinku da bi nastavili sa radom.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Korisničko ime:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Lozinka:");

        btnUlogujSe.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUlogujSe.setText("Uloguj se");
        btnUlogujSe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUlogujSeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUlogujSe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(passLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btnUlogujSe)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUlogujSeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUlogujSeActionPerformed
        try {
            uspostaviKomunikaciju();
            HashMap<String, String> adminHash = prijaviAdministratora();
            ulogujAdministratora(adminHash);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Konekcija na server nije uspela", "Greška", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Administrator sa datim korisničkim imenom je već ulogovan.", "Greška", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnUlogujSeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EkranskaFormaLogovanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EkranskaFormaLogovanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EkranskaFormaLogovanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EkranskaFormaLogovanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EkranskaFormaLogovanje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUlogujSe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField passLozinka;
    private javax.swing.JTextField txtKorisnickoIme;
    // End of variables declaration//GEN-END:variables

    @Override
    void postaviImeForme() {
        this.setTitle("Forma za prijavljivanje administratora");
    }

    private HashMap<String, String> prijaviAdministratora() throws Exception {
        String korisnickoIme = txtKorisnickoIme.getText();
        String korisnickaLozinka = new String(passLozinka.getPassword());
        return OpstiKontrolerKI.vratiInstancu().prijaviAdministratora(korisnickoIme, korisnickaLozinka);
    }

    private void ulogujAdministratora(HashMap<String, String> prijavljeniAdministratorHash) {
        if (prijavljeniAdministratorHash != null) {
            GlavnaEkranskaForma gef = new GlavnaEkranskaForma();
            gef.setUlogovaniAdministrator(OpstiKontrolerKI.vratiInstancu().adminHashUadminObjekat(prijavljeniAdministratorHash));
            gef.setVisible(true);
            dispose();
            JOptionPane.showMessageDialog(gef, "Administrator je uspešno ulogovan");
        } else {
            JOptionPane.showMessageDialog(this, "Administrator nije uneo tačne podatke", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void uspostaviKomunikaciju() throws IOException {
        OpstiKontrolerKI.vratiInstancu().uspostaviKomunikaciju();
    }

    //neimplementirane metode
    @Override
    void postaviModeleTabela() {
        throw new UnsupportedOperationException("Metoda koju ste pozvali nije još implementirana.");
    }

    @Override
    void popuniTabele() {
        throw new UnsupportedOperationException("Metoda koju ste pozvali nije još implementirana.");
    }

    @Override
    void postaviToolTipove() {
        throw new UnsupportedOperationException("Metoda koju ste pozvali nije još implementirana.");
    }

    @Override
    HashMap<String, String> kreirajObjekat() {
        throw new UnsupportedOperationException("Metoda koju ste pozvali nije još implementirana.");
    }
}
